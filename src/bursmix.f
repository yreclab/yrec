C $$$$$$
      SUBROUTINE BURSMIX(COD2,DELTS,HCOMP,HD,HL,HP,HR,HS,HS1,HS2,HSTOT,
     *                   HT,HV,IMAX,IMIN,JENV0,JENV1,LOK,LCZ,M,MRZONE,
     *                   MXZONE,NRZONE,NZONE)
      PARAMETER (JSON=5000)
      IMPLICIT REAL*8(A-H,O-Z)
      IMPLICIT LOGICAL*4(L)
      COMMON/FLAG/LEXCOM
      COMMON/LIOV/PSCAL0,PSCAL1
      COMMON/NEWRAT/RLI6(JSON),RLI7(JSON),RBE9(JSON)
      COMMON/OLDRAT/RLI60(JSON),RLI70(JSON),RBE90(JSON)
      COMMON/OLDMOD/HPO(JSON),HTO(JSON),HRO(JSON),HLO(JSON),HDO(JSON),
     *     HCOMPP(15,JSON),HSS(JSON),LCO(JSON),LCZO(JSON),TEFFLO,MO
C INPUT VARIABLES
      DIMENSION COD2(JSON),HCOMP(15,JSON),HD(JSON),HL(JSON),
     *     HP(JSON),HR(JSON),HS(JSON),HS1(JSON),HS2(JSON),HT(JSON),
     *     HV(JSON),LCZ(JSON),MRZONE(13,2),MXZONE(12,2),
     *     ECOD2(JSON),EM(JSON)
C LOCAL VARIABLES
      DIMENSION HCSAV(15,JSON),NSEQ(11),HKEEP(3,JSON)
      DATA NSEQ/1,2,4,6,8,10,12,14,16,18,20/
      SAVE
C THIS SUBROUTINE IS DESIGNED TO ALTERNATE BETWEEN NUCLEAR BURNING
C PLUS GRAVITATIONAL SETTLING AND MIXING IN A SERIES OF PROGRESSIVELY
C SMALLER TIMESTEPS, EXTRAPOLATING TO THE ANSWER FOR ZERO TIMESTEP.
C IT ASSUMES THAT THE DIFFUSION COEFFICIENTS, STRUCTURE, AND NUCLEAR REACTION 
C RATES ARE HELD CONSTANT DURING THE TIME STEP.  THE PROCEDURE IS AS 
C FOLLOWS:
C STORE THE RESULTS FOR THE WHOLE TIMESTEP IN ENTRY ONE.
C THEN CALL THE NUCLEAR BURNING ROUTINES TO BURN AND THE ROTATIONAL
C MIXING ROUTINE TO MIX FOR A SERIES OF SMALLER TIME STEPS, STORING THE
C ANSWER AS A FUNCTION OF TIME STEP.
      IF(LEXCOM)THEN
         NSPEC = 15
      ELSE
         NSPEC = 11
      ENDIF
      JBEG = 4
      JEND = NSPEC
      NBURS = 11
C STORE ALL ELEMENTS HERE - HCOMPP IS USED AS THE START OF
C TIMESTEP VARIABLE IN KEMCOM, SO IT NEEDS TO BE TEMPORARILY
C OVERWRITTEN IN THE SOLUTION PROCESS
      DO I = 1,M
         DO J = 1,NSPEC
            HCSAV(J,I) = HCOMPP(J,I)
         END DO
         DO J = 1,3
            HKEEP(J,I) = HCOMP(J,I)
         END DO
      END DO
C STORE RESULTS OF INITIAL CALCULATION AS FIRST ENTRY IN BS
C ROUTINE
      III = 1
      CALL BSROTMIX(DELTS,HCOMP,III,M,JBEG,NSPEC,NSEQ,LCONV)
      DO III = 2, NBURS
C RESET COMPOSITION TO INITIAL VALUE.
         DO I = 1,M
            DO J = 1,NSPEC
               HCOMP(J,I) = HCSAV(J,I)
               HCOMPP(J,I) = HCSAV(J,I)
            END DO
         END DO
         NSTEP = NSEQ(III)
         DT = DELTS/DFLOAT(NSTEP)
         DO JJJ = 1,NSTEP
C PERFORM NUCLEAR BURNING
            CALL ROTMIX(DT,HCOMP,HS2,HT,5,M,MRZONE,MXZONE,
     *               NRZONE,NZONE,HSTOT,HD,HS,HR,HP,LCZ,HS1) 
C PERFORM MIXING
            CALL NDIFCOM(DT,COD2,ECOD2,EM,HD,HL,HP,HR,HS,HS1,HS2,
     *                   HSTOT,HV,IBEG,IEND,IMAX,IMIN,LCZ,LOK,M,NTOT,
     *                   HCOMP,JBEG,JEND)
            IF(LEXCOM)THEN
               CALL LIBURN2(DT,HCOMP,HD,HR,HS1,HS2,HT,JENV1,JENV0,M)
            ENDIF
            DO I = 1,M
               DO J = 1,NSPEC
                  HCOMPP(J,I) = HCOMP(J,I)
               END DO
            END DO
         END DO
         CALL BSROTMIX(DELTS,HCOMP,III,M,JBEG,NSPEC,NSEQ,LCONV)
         IF(LCONV)THEN
            DO I = 1,M
               DO J = 1,NSPEC
                  HCOMPP(J,I) = HCOMP(J,I)
               END DO
            END DO
            GOTO 10
         ENDIF
      END DO
C FAILED TO CONVERGE; PRINT WARNING
C IN THIS CASE THE UNEXTRAPOLATED FINAL COMPOSITION IS USED.
      WRITE(*,5)
 5    FORMAT(' WARNING - EXTRAPOLATION IN BSBURN DID NOT CONVERGE')
 10   CONTINUE
      DO I = 1,M
         HCOMP(1,I) = HKEEP(1,I)
         HCOMP(3,I) = HKEEP(3,I)
         HCOMP(2,I) = 1.0D0 - HCOMP(1,I) - HCOMP(3,I) - HCOMP(4,I)
      END DO
      IF(LEXCOM)THEN
         DO I = 1,M
            RLI60(I) = RLI6(I)
            RLI70(I) = RLI7(I)
            RBE90(I) = RBE9(I)
         END DO
         JENV0 = JENV1
         PSCAL0 = PSCAL1
      ENDIF
      RETURN
      END
