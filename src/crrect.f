C     JANUARY 28, 1991:
C     REPLACED EGEN SO THAT IT FOLLOWS FULL CNO NOT CN IN EQUILIBRIUM AND
C     FEBRUARY 11, 1991:
C     REPLACED CONVEC SO THAT WOULD CALCULATE OVERSHOOT CORRECTLY.
C     ADDED ROUTINES OVERSH AND HSUBP.
C
C
C$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
C CRRECT
C$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
      SUBROUTINE CRRECT(DELTS,M,NITER,LFINI,LARGE,LNEW,LRESET,LSBC,
     *TRIT,TRIL,CFENV,PS,TS,RS,FTRI,ISTORE,ESTORE,HSTOT,BL,TEFFL,
     *HD,HHA,HHB,HHC,HL,HMAX,HP,HPP,HR,HS,HS1,HS2,HSRF,HT,HTT,HCOMP,LC,
     *NHMAX,TLUMX,LATMO,LDERIV,LMIX,LOCOND,QDT,QDP,MODEL,FP,FT,ETA2,
     *OMEGA,R0,ITDONE,HG,HI,HJM, ITLVL,LCZ,MRZONE,MXZONE,NRZONE,NZONE,
     *QIW,HKEROT,HKEROT0)

      PARAMETER(JSON=5000)
C INPUTS ASSUMES GIVEN LOG(TE) AS TEFFL
C        ASSUMES GIVEN LOG(L/LSUN) AS BL
C        DELTS = TIME STEP IN SECONDS
C        NITER = ITERATION NUMBER
C OUTPUTS  LFINI = .T. IF MODEL HAS CONVERGED
C          LARGE = .T. IF CORRECTIONS ARE TOO LARGE
      IMPLICIT REAL*8 (A-H,O-Z)
      IMPLICIT LOGICAL*4(L)
      COMMON/LUOUT/ILAST,IDEBUG,ITRACK,ISHORT,IMILNE,IMODPT,ISTOR,IOWR
      COMMON/CCOUT/LSTORE,LSTATM,LSTENV,LSTMOD,LSTPHYS,LSTROT,LSCRIB
      COMMON/CCOUT2/LDEBUG,LCORR,LMILNE,LTRACK,LSTPCH
      COMMON/CENV/TRIDT,TRIDL,SENV0,LSENV0,LNEW0
      COMMON/COMP/XENV,ZENV,ZENVM,AMUENV,FXENV(12),XNEW,ZNEW,STOTAL,
     *     SENV
      COMMON/CONST/CLSUN,CLSUNL,CLNSUN,CMSUN,CMSUNL,CRSUN,CRSUNL,CMBOL
      COMMON/CONST1/ CLN,CLNI,C4PI,C4PIL,C4PI3L,CC13,CC23,CPI
      COMMON/CONST2/CGAS,CA3,CA3L,CSIG,CSIGL,CGL,CMKH,CMKHN
      COMMON/CTOL/HTOLER(5,2),FCORR0,FCORRI,FCORR,HPTTOL(12),NITER1,
     1     NITER2,NITER3
      COMMON/ENVGEN/ATMSTP,ENVSTP,LENVG
      COMMON/HEFLSH/LKUTHE
      COMMON/ROT/WNEW,WALPCZ,ACFPFT,ITFP1,ITFP2,LROT,LINSTB,LWNEW
      COMMON/NEWENG/NITER4,LNEWS,LSNU
      COMMON/OLDMOD/HPO(JSON),HTO(JSON),HRO(JSON),HLO(JSON),HDO(JSON),
     *              HCOMPP(15,JSON),HSS(JSON),LCO(JSON),LCZO(JSON),TEFFLO,MO
      COMMON/FLAG/LEXCOM
C DBG 7/92 COMMON BLOCK ADDED TO COMPUTE DEBYE-HUCKEL CORRECTION.
      COMMON/DEBHU/CDH,ETADH0,ETADH1,ZDH(18),XXDH,
     1             YYDH,ZZDH,DHNUE(18),LDH
      DIMENSION MXZONE(12,2),MXZON0(12,2)
      DIMENSION TRIT(3),TRIL(3),CFENV(9),PS(3),TS(3),RS(3),ESTORE(4),
     *TLUMX(8),FP(JSON),FT(JSON),ETA2(JSON),OMEGA(JSON),R0(JSON)
      DIMENSION HD(JSON),HHA(4,2,JSON),HHB(4,JSON),HHC(JSON),HL(JSON),
     * HMAX(4),HP(JSON),HPP(JSON),HR(JSON),HS(JSON),HS1(JSON),HS2(JSON),
     * HSRF(6),HT(JSON),HTT(JSON),HCOMP(15,JSON),LC(JSON),NHMAX(4),
     * HG(JSON),HI(JSON),HJM(JSON)
C MHP 10/02 ADDED MISSING DIMENSION STATEMENTS
      DIMENSION HKEROT(JSON),HKEROT0(JSON),
     *          LCZ(JSON),QIW(JSON),MRZONE(13,2)
      SAVE

      IF(NITER.LE.0) RETURN      
      BL = DLOG10(HL(M))
C ZERO COUNTERS
      KENV = 0
      KATM = 0
      KSAHA = 0
      SENV = HS(M) - HSTOT
      IF(LNEW.OR.LRESET .AND.ITLVL.EQ.2) LSBC = .TRUE.
C  FIND NEW FP AND FT IF MODEL IS ROTATING
      IF(LROT.AND.LSBC) THEN
	 FPL = FP(M)
	 FTL = FT(M)
      ELSE
	 FPL = 1.0D0
	 FTL = 1.0D0
      ENDIF
C SET UP SURFACE BOUNDARY CONDITIONS-2ND AND 3RD LEVELS OF ITER ONLY
C FIND ENVELOPE MASS AND SET X AND Z TO ENVELOPE VALUES
      IF(LSBC) THEN
	 X = XNEW
	 Z = ZNEW
	 PLIM = HP(M)
	 IF (LDH) THEN
	    XXDH = HCOMP(1,M)
	    YYDH = HCOMP(2,M)+HCOMP(4,M)
	    ZZDH = HCOMP(3,M)
	    ZDH(1) = HCOMP(5,M)+HCOMP(6,M)
	    ZDH(2) = HCOMP(7,M)+HCOMP(8,M)
	    ZDH(3) = HCOMP(9,M)+HCOMP(10,M)+HCOMP(11,M)
	 END IF
	 CALL SURFBC(TRIT,TRIL,CFENV,PS,TS,RS,FTRI,ISTORE,ESTORE,
     *               LNEW,LRESET,LSBC,KSAHA,KENV,KATM,HSTOT,BL,
     *               TEFFL,X,Z,FPL,FTL,LFLP,PLIM,LC,M)
      ENDIF
C 7/91 ADD CALL TO MIX 
      IF(ITLVL.GT.2 .AND. DELTS.GT.0.0D0)THEN
         NSPEC=11
         IF(LEXCOM)NSPEC=15
         DO 2 I = 1,M
            DO 1 J = 1,NSPEC
               HCOMP(J,I) = HCOMPP(J,I)
    1       CONTINUE
    2    CONTINUE
         CALL MIX(DELTS,HCOMP,HD,HL,HP,HR,HS,HS1,HS2,HSTOT,
     *        HT,ITLVL,LC,M,QDT,QDP,DDAGE,JCORE,JENV,
     *        MXZONE,MXZON0,TEFFL)
      ENDIF
c      IF(LROT)THEN
c         CALL OVROT(HCOMP,HD,HP,HR,HS,HT,LC,M,LCZ,MRZONE,MXZONE,
c     *        NRZONE,NZONE)
c      ENDIF
C  IF MODEL CONVERGED ON THE PREVIOUS LEVEL OF ITERATION AND
C  THE TRIANGLE WAS CHECKED AND NOT FLIPPED,SKIP CORRECTION ROUTINE.
      IF(LSBC .AND. .NOT.LFLP .AND. LFINI) RETURN
      LFINI = .FALSE.
      DO 100 ITER = 1,NITER
C DO HENYEY REDUCTION
	 HMAX(1) = 0.0D0
	 HMAX(2) = 0.0D0
	 HMAX(3) = 0.0D0
	 HMAX(4) = 0.0D0
	 CALL COEFFT(DELTS,M,HD,HHA,HHB,HHC,HL,HMAX,HP,HPP,HR,HS,HS1,
     *   HS2,HT,HTT,HCOMP,LC,TLUMX,LATMO,LDERIV,LMIX,LOCOND,QDT,QDP,
     *   KSAHA,MODEL,FP,FT,HKEROT,HKEROT0,JENV,TEFFL)
C RENORMALIZE TLUMX-S
CCC   TAKE OUT RENORMALIZATION DURING HE FLASH (NON-THERMAL EQUALIBRIUM)
	 THL = TLUMX(1)+TLUMX(2)+TLUMX(3)+TLUMX(4)+TLUMX(5)+TLUMX(6)
     *         +TLUMX(7)+TLUMX(8)
	 IF (.NOT.LKUTHE .AND. THL.GT.0.0D0) THEN
	    TEMP = HL(M)/THL
	    DO 10 J = 1,8
	       TLUMX(J) = TLUMX(J)*TEMP
   10       CONTINUE
	 ENDIF
C CHECK ON SIGNIFICANCE OF R.H.S. EQUATIONS FOR P AND T
C N.B.  DOES NOT CHECK DIFFERENCES IN BOUNDARY EQUATIONS
	 IF(ITER.GT.1) THEN
	    IF(HMAX(1).LE.HTOLER(5,1) .AND. HMAX(2).LE.HTOLER(5,2) .AND.
     *      HMAX(3).LE.HTOLER(5,1) .AND. HMAX(4).LE. HTOLER(5,2)) THEN
	       WRITE(ISHORT,20) (HMAX(J),J=1,4)
   20          FORMAT(' R.H.S. BELOW TOLERANCES--P',1PE9.2,'  T ',E9.2,
     *         '  R ',E9.2,'  L ',E9.2)
	       WRITE(ISHORT,75) ITDONE+1
	       LFINI = .TRUE.
	       RETURN
	    ENDIF
	 ENDIF
C SET UP HENYEY COEFFICIENTS FOR SURFACE
	 HSRF(1) = -CFENV(1)
	 HSRF(2) = -CFENV(2)
	 HSRF(3) = CFENV(1)*HP(M) + CFENV(2)*HT(M) + CFENV(3) - HR(M)
	 TEMP = CLN*HL(M)
	 HSRF(4) =-TEMP*CFENV(4)
	 HSRF(5) =-TEMP*CFENV(5)
	 HSRF(6) = TEMP*(CFENV(4)*HP(M)+CFENV(5)*HT(M)+CFENV(6)-BL)
C DO BACK SOLUTION FOR CORRECTIONS
	 CALL HSOLVE(M,HHA,HHB,HSRF)
C CHECK ON MAXIMUM CORRECTIONS
	 DO 30 J = 1,4
	    HMAX(J) = DABS(HHB(J,1))
	    NHMAX(J) = 1
   30    CONTINUE
	 DO 40 I = 2,M
	    TEST = DABS(HHB(1,I))
	    IF(HMAX(1).LE.TEST) THEN
	       HMAX(1) = TEST
	       NHMAX(1) = I
	    ENDIF
	    TEST = DABS(HHB(2,I))
	    IF(HMAX(2).LE.TEST) THEN
	       HMAX(2) = TEST
	       NHMAX(2) = I
	    ENDIF
	    TEST = DABS(HHB(3,I))
	    IF(HMAX(3).LE.TEST) THEN
	       HMAX(3) = TEST
	       NHMAX(3) = I
	    ENDIF
	    TEST = DMIN1(DABS(HHB(4,I)),DABS(HHB(4,I)/HL(I)))
	    IF(HMAX(4).LE.TEST) THEN
	       HMAX(4) = TEST
	       NHMAX(4) = I
	    ENDIF
   40    CONTINUE
CCC   HE FLASH -- OK FOR ALL
	 HLMAX = HMAX(4)
C LFINI = T IF MAX CORRECTIONS LESS THAN CONVERGENCE CRITERIA SET IN
C HTOLER. LARGE = T IF MAX CORRECTIONS GREATER THAN LARGEST CORRECTIONS
C ALLOWED, ALSO SET IN HTOLER
	 LFINI = HMAX(1).LT.HTOLER(1,1) .AND. HMAX(2).LT.HTOLER(2,1)
     *   .AND. HMAX(3).LT.HTOLER(3,1) .AND. HMAX(4).LT.HTOLER(4,1)
	 LARGE = HMAX(1).GT.HTOLER(1,2) .OR.  HMAX(2).GT.HTOLER(2,2)
     *   .OR. HMAX(3).GT.HTOLER(3,2) .OR.  HMAX(4).GT.HTOLER(4,2)
	 DO 50 J = 1,4
	    IJ = NHMAX(J)
	    HMAX(J) = HHB(J,IJ)
   50    CONTINUE
	 IF(FCORR0.GT.0.0D0) FCORR = DMIN1(1.D0,FCORR+FCORRI)
C HE FLASH CHANGE
	 FACT = FCORR
	 IF (LKUTHE) THEN
	    IF (HLMAX.LE.5.0D-1) FACT=8.0D-1
	    IF (HLMAX.LE.5.0D-3) FACT=1.0D0
	 ENDIF
	 TLUMH = TLUMX(1) + TLUMX(2) + TLUMX(3) + TLUMX(4)
	 TLUMHE= TLUMX(5) + TLUMX(8)
	 IF(LCORR) THEN
	    WRITE (ISHORT,60) LFINI,HMAX(4),HTOLER(4,1),NHMAX(4)
   60       FORMAT (1X,'DEL-L/L  ',L2,1P2E12.4,5X,I5)
	    WRITE(ISHORT,70)(NHMAX(J),HMAX(J),J=1,4),FACT,TLUMH,
     *      TLUMHE,(TLUMX(J),J=6,7)
   70       FORMAT(' CORR',I5,'P',1PE9.2,I5,'T',E9.2,I5,'R',E9.2,I5,'L',
     *      E9.2,'  F=',0PF5.3,'  E-HY',1PE10.3,' HE',E10.3,' NU',E10.3,
     *      ' G',E10.3)
	    IF(LFINI) THEN
	       WRITE(ISHORT,75) ITDONE+1
   75          FORMAT(10X,'MODEL CONVERGED AFTER ',I4,'  ITERATIONS')
	    ENDIF
	 ENDIF
	 IF(LARGE) THEN
	    WRITE(IOWR,80)
	    WRITE(ISHORT,80)
   80       FORMAT(1X,'-----CORRECTIONS EXCEEDED TOLERANCES')
            RETURN
         ENDIF
C APPLY CORRECTIONS
	 DO 90 I = 1,M
	    TEMP = FACT*HHB(1,I)
	    HP(I) = HP(I) + TEMP
	    HPP(I) = HPP(I) + TEMP
	    TEMP = FACT*HHB(2,I)
	    HT(I) = HT(I) + TEMP
	    HTT(I) = HTT(I) + TEMP
	    HR(I) = HR(I) + FACT*HHB(3,I)
	    HL(I) = HL(I) + FACT*HHB(4,I)
   90    CONTINUE
	 BL = DLOG10(HL(M))
	 TEFFL = CFENV(7)*HP(M) + CFENV(8)*HT(M) + CFENV(9)
         IF(LROT)THEN
            CALL GETROT(HD,HJM,HR,HS,HS2,LCZ,M,ETA2,HI,OMEGA,QIW,R0)
            CALL FPFT(HD,HR,HS,M,OMEGA,ETA2,FP,FT,HG,R0)
            DO I = 1,M
               HJ = HJM(I)*HS2(I)
               HKEROT(I) = 0.5D0*OMEGA(I)*HJ
            END DO
         ENDIF
	 ITDONE = ITDONE + 1
	 IF(LFINI) RETURN
  100 CONTINUE

      RETURN
      END
