C$$$$$$
      SUBROUTINE MIDMOD(DELTS,DT,FX,HCOMP,HD,HG,HJM,HL,HP,HR,HS,HS1,
     *            HS2,HSTOT,HT,LC,LCZ,LFIRST,M,ETA2M,HDM,HGM,HICZ,HIM,
     *            HLM,HPM,HRM,HSBOT,HSTOP,HTM,IMIN,IMAX,LALLCZ,LCM,
     *            LCZM,LCZSUR,OMEGAM,R0M,QIWM,MRZONE,MXZONE,NRZONE,
     *            NZONE)

      PARAMETER (JSON=5000)
      IMPLICIT REAL*8(A-H,O-Z)
      IMPLICIT LOGICAL*4(L)
      COMMON/BURN/HCOMPM(15,JSON)
      COMMON/CONST/CLSUN,CLSUNL,CLNSUN,CMSUN,CMSUNL,CRSUN,CRSUNL,CMBOL
      COMMON/CONST1/CLN,CLNI,C4PI,C4PIL,C4PI3L,CC13,CC23,CPI
C MHP 8/17 ADDED EXCEN, C_2 TO COMMON BLOCK FOR MATT ET AL. 2012 CENT. TERM
      COMMON/CWIND/WMAX,EXMD,EXW,EXTAU,EXR,EXM,EXL,EXPR,CONSTFACTOR,
     *             STRUCTFACTOR,EXCEN,C_2,LJDOT0
C      COMMON/CWIND/WMAX,EXMD,EXW,EXTAU,EXR,EXM,CONSTFACTOR,STRUCTFACTOR,LJDOT0
      COMMON/FLAG/LEXCOM
      COMMON/MDPHY/AMUM(JSON),CPM(JSON),DELM(JSON),DELAM(JSON),
     *             DELRM(JSON),ESUMM(JSON),OM(JSON),QDTM(JSON),
     *             THDIFM(JSON),VELM(JSON),VISCM(JSON),EPSM(JSON)
      COMMON/OLDMOD/HPO(JSON),HTO(JSON),HRO(JSON),HLO(JSON),HDO(JSON),
     *              HCOMPP(15,JSON),HSS(JSON),LCO(JSON),LCZO(JSON),TEFFLO,MO
      COMMON/OLDROT/WOLD(JSON),HJX(JSON),HIO(JSON),HGO(JSON),R0X(JSON),
     *              ETA2X(JSON)
      COMMON/OLDPHY/DELO(JSON),DELAO(JSON),AMUO(JSON),OO(JSON),
     *              CPO(JSON),QDTO(JSON),VELO(JSON),VISCO(JSON),
     *              THDIFO(JSON),ESUMO(JSON),DELRO(JSON),EPSO(JSON)
      COMMON/SCRTCH/SESUM(JSON),SEG(7,JSON),SBETA(JSON),SETA(JSON),
     * LOCONS(JSON),SO(JSON),SDEL(3,JSON),SFXION(3,JSON),SVEL(JSON)
      COMMON/TEMP/CP(JSON),HAMU(JSON),SQDT(JSON),THDIF(JSON),
     *     VISC(JSON)
      COMMON/DWMAX/QWRMAX(JSON),QWRMX0(JSON)
      COMMON/OLDAB/HCOMPS(15,JSON)
C MHP 05/02 ADDED FOR DEUTERIUM BURNING
      COMMON/CTLIM/ATIME(14),TCUT(5),TSCUT,TENV0,TENV1,TENV,TGCUT
      COMMON/DEUTER/DRATE(JSON),DRATE0(JSON),FMASSACC,JCZ
C MHP 06/02
      COMMON/PREVMID/DDELP(JSON),DDELN(JSON),HRP(JSON),LCP(JSON)
      DIMENSION HCOMP(15,JSON),HD(JSON),HG(JSON),HJM(JSON),HL(JSON),
     *     HP(JSON),HR(JSON),HS(JSON),HS1(JSON),HS2(JSON),HT(JSON),
     *     LC(JSON),LCZ(JSON),ETA2M(JSON),HDM(JSON),HGM(JSON),
     *     HIM(JSON),HLM(JSON),HPM(JSON),HRM(JSON),HTM(JSON),
     *     LCM(JSON),LCZM(JSON),OMEGAM(JSON),R0M(JSON),QIWM(JSON),
     *     MRZONE(13,2),MXZONE(12,2)
C G Somers 3/17, ADDING NEW TAUCZ COMMON BLOCK
      COMMON/OVRTRN/LNEWTCZ,LCALCENV,TAUCZ,TAUCZ0,PPHOT,PPHOT0,FRACSTEP
C MHP 3/09 ADDED FLAG TO ENFORCE SOLID BODY ROTATION AT ALL TIMES.
      COMMON/SBROT/LSOLID
C MHP 06/02
      LOGICAL*4 LCHG(JSON)
C ADDED VECTOR FOR DEUTERIUM BURNING
      DIMENSION DRATEM(JSON),DRATEM0(JSON)
      SAVE
C IN GENERAL A DIFFUSION TIMESTEP IS LESS THAN A MODEL TIMESTEP.
C SR MIDMOD TAKES THE STRUCTURE AT THE BEGINNING AND END OF THE TIMESTEP
C AND ASSIGNS AN INTERMEDIATE STRUCTURE USING LINEAR INTERPOLATION IN TIME.
C NUCLEAR BURNING IS ACCOUNTED FOR HERE, AND THE CHANGES IN ANGULAR 
C VELOCITY DUE TO CHANGES IN RADIUS AND CONSERVATION OF ANGULAR MOMENTUM 
C ARE ALSO COMPUTED.
C MIDMOD ALSO LOCATES THE OUTER EDGE OF A CENTRAL CONVECTION ZONE AND THE INNER
C EDGE OF A SURFACE C.Z., AND DETERMINES THE MASS AND MOMENT OF INERTIA OF 
C THE SURFACE C.Z.  
      IEND = 11
      IF(LEXCOM) IEND = 15
C  INITIALIZE COMPOSITION ARRAY THE FIRST TIME THROUGH.
C  HCOMPM IS THE ARRAY OF CHANGES IN COMPOSITION DUE TO NUCLEAR BURNING
C  DURING THE COURSE OF THE MODEL TIMESTEP.
C MHP 06/02 SAVE CHANGES IN R, CZ DEPTH, DELAD-DELRAD FROM THE
C PRIOR STEP.
      IF(LFIRST)THEN
         DO 20 J = 1,M
            LCP(J) = LCO(J)
            HRP(J) = HRO(J)
            DDELP(J) = DELAO(J)-DELRO(J)
            AMUM(J) = AMUO(J)
            DO 10 I = 1,IEND 
               HCOMP(I,J) = HCOMPP(I,J)
   10       CONTINUE
   20    CONTINUE
      ELSE
         DO J = 1,M
            HRP(J) = HRM(J)
            DDELP(J) = DDELN(J)
            LCP(J) = LCM(J)
         END DO
      ENDIF
      LNEWCZ = .FALSE.
C  INTERPOLATE IN THE MODEL VARIABLES AND AUXILLARY PHYSICS.
      FAC2 = DT/DELTS
      DO 40 J = 1,M
         HDM(J) = HDO(J) + FX*(HD(J)-HDO(J))
         HLM(J) = HLO(J) + FX*(HL(J)-HLO(J))
         HPM(J) = HPO(J) + FX*(HP(J)-HPO(J))
         HRM(J) = HRO(J) + FX*(HR(J)-HRO(J))
         HTM(J) = HTO(J) + FX*(HT(J)-HTO(J))
C        DO 30 I = 1,IEND
C           HCOMP(I,J)=HCOMP(I,J)+FAC2*HCOMPM(I,J)
C           HCOMPP(I,J) = HCOMP(I,J)
C  30    CONTINUE
         HGM(J) = HGO(J) + FX*(HG(J) - HGO(J))
         DELAM(J) = DELAO(J) + FX*(SDEL(3,J)-DELAO(J))
         DELM(J) = DELO(J) + FX*(SDEL(2,J) - DELO(J))
         DELRM(J) = DELRO(J) + FX*(SDEL(1,J) - DELRO(J))
         ESUMM(J) = ESUMO(J) + FX*(SESUM(J) - ESUMO(J))
         VISCM(J) = VISCO(J) + FX*(VISC(J) - VISCO(J))
         THDIFM(J) = THDIFO(J) + FX*(THDIF(J) - THDIFO(J))
         CPM(J) = CPO(J) + FX*(CP(J) - CPO(J))
         QDTM(J) = QDTO(J) + FX*(SQDT(J) - QDTO(J))
         OM(J) = OO(J) + FX*(SO(J) - OO(J))
         AMUM(J) = AMUM(J) + FAC2*(HAMU(J) - AMUO(J))
C MHP 6/00 ADDED TOTAL ENERGY GENERATION
         TEMP = SESUM(J)+SEG(6,J)+SEG(7,J)
         EPSM(J) = EPSO(J)+FX*(TEMP-EPSO(J))
   40 CONTINUE
C  CHECK FOR ADVANCING OR RECEDING CONVECTIVE REGIONS.USE INTERPOLATED
C  RADIATIVE AND ADIABATIC TEMPERATURE GRADIENTS TO DETERMINE WHETHER
C  OR NOT A ZONE IS CONVECTIVE IF IT CHANGES STATE OVER THE COURSE OF A
C  TIMESTEP.
      DO 50 I = 1,M
         DDELN(I) = DELAM(I)-DELRM(I)
         IF(LC(I).EQV.LCP(I))THEN
            LCM(I) = LC(I)
            VELM(I) = VELO(I) + FX*(SVEL(I)-VELO(I))
            LCHG(I) = .FALSE.
         ELSE
            LCHG(I) = .TRUE.
            LNEWCZ = .TRUE.
            IF(DELAM(I).LT.DELRM(I)) THEN
               LCM(I) = .TRUE.
               VELM(I) = MAX(VELO(I),SVEL(I))
            ELSE
               LCM(I) = .FALSE.
               VELM(I) = 0.0D0
            ENDIF
         ENDIF
   50 CONTINUE
      LNEWCZ = .FALSE.
C MHP 06/02 IF THE CZ DEPTHS HAVE CHANGED, RESOLVE
C OUT WHEN A GIVEN ZONE "DROPPED OUT" OF THE CONVECTION
C ZONE OR ENTERED IT.  MODIFY THE SPECIFIC ANGULAR MOMENTUM
C ACCORDINGLY.
      IF(LNEWCZ)THEN
         LCC = .FALSE.
         LDO = .FALSE.
         DO I = 1,M-1
            IF(LCHG(I))THEN
               IF(.NOT.LCC)THEN
C START OF CHANGED REGION
                  LCC = .TRUE.
                  I0 = I
               ENDIF
            ENDIF
            IF(.NOT.LCHG(I))THEN
               IF(LCC)THEN
C END OF CHANGED REGION
               I1 = I - 1
               LCC = .FALSE.
               LDO = .TRUE.
               WRITE(*,*)I0,I1,DDELN(I0),DDELN(I0-1),
     *                   DDELN(I1+1)
C ONLY CHANGE IF THERE IS A RECEDING CONVECTION ZONE;
C WE CAN ASSUME LOCAL CONSERVATION OF J PRIOR TO HAVING
C A SHELL INCORPORATED INTO A CZ.
               IF (DDELN(I0).GT.0.0D0)THEN
                  IF(DDELN(I0-1).LT.0.0D0)THEN
C SUBTRACTED FROM A CORE CZ
                     IND = -1
                  ELSE IF(DDELN(I1+1).LT.0.0D0)THEN
C SUBTRACTED FROM AN ENVELOPE CZ
                     IND = 1
                  ELSE
                     LDO = .FALSE.
                  ENDIF
               ELSE
                  LDO = .FALSE.
               ENDIF
               ENDIF
            ENDIF
            IF(LDO)THEN
               LDO = .FALSE.
C CORE CZ
               IF(IND.LT.0)THEN
C LOCATE EDGES OF CURRENT LOWER CZ
                  ICZ1 = I0 - 1
                  DO II = I0-1,1,-1
                     IF(.NOT.LCM(II))THEN
                        ICZ0 = II + 1
                        GOTO 11
                     ENDIF
                  END DO
                  ICZ0 = 1
 11               CONTINUE
                  DO J = I1,I0,-1
                     IF(DDELN(J).LT.0.0D0)GOTO 13
                     CZI = 0.0D0
                     CZJ = 0.0D0
C FRACTION OF THE TIMESTEP SHELL WAS RADIATIVE
                     FX = DDELN(J)/(DDELN(J)-DDELP(J))
C FRACTION OF THE TIMESTEP THAT THE SHELL WAS CONVECTIVE
                     F2 = 1.0D0 - FX
                     DO II = ICZ0,J-1
                        HRR = HRP(II)+F2*(HR(II)-HRO(II))
                        CZI = CZI+CC23*HS2(II)*10.0D0**(2.0D0*HRR)
                        CZJ = CZJ + HJM(II)*HS2(II)
                     END DO
C GET THE CZ MOMENT OF INERTIA AND TOTAL J AT THE TIME THE
C SHELL WAS RELEASED; THIS GIVES A CORRECTED VALUE FOR 
C J/M.  REDISTRIBUTE THE DIFFERENCE IN J BACK INTO THE CZ.
                     HRSH = 2.0D0*(HRP(J)+F2*(HR(J)-HRP(J)))
                     HJM2 = CC23*(CZJ/CZI)*10.0D0**HRSH
                     DELJ = (HJM(J)-HJM2)*HS2(J)
                     RATIO = (CZJ-DELJ)/CZJ
                     HJM(J)=HJM2
                     RR = HJM2/HJM(J)
                     WRITE(*,*)J,FX,RR,DELJ,RATIO
                     DO II = ICZ0,J-1
                        HJM(II) = HJM(II)*RATIO
                     END DO
                  END DO
               ELSE
C ENVELOPE CZ
C LOCATE EDGES OF CURRENT LOWER CZ
                  ICZ0 = I1 + 1
                  DO II = I1+2,M
                     IF(.NOT.LCM(II))THEN
                        ICZ1 = II - 1
                        GOTO 12
                     ENDIF
                  END DO
                  ICZ1 = M
 12               CONTINUE
                  DO J = I0,I1
                     IF(DDELN(J).LT.0.0D0)GOTO 13
                     CZI = 0.0D0
                     CZJ = 0.0D0
C FRACTION OF THE TIMESTEP SHELL WAS RADIATIVE
                     FX = DDELN(J)/(DDELN(J)-DDELP(J))
C FRACTION OF THE TIMESTEP THAT THE SHELL WAS CONVECTIVE
                     F2 = 1.0D0 - FX
                     DO II = J+1,ICZ1
                        HRR = HRP(II)+F2*(HR(II)-HRO(II))
                        CZI = CZI+CC23*HS2(II)*10.0D0**(2.0D0*HRR)
                        CZJ = CZJ + HJM(II)*HS2(II)
                     END DO
C GET THE CZ MOMENT OF INERTIA AND TOTAL J AT THE TIME THE
C SHELL WAS RELEASED; THIS GIVES A CORRECTED VALUE FOR 
C J/M.  REDISTRIBUTE THE DIFFERENCE IN J BACK INTO THE CZ.
                     HRSH = 2.0D0*(HRP(J)+F2*(HR(J)-HRP(J)))
                     HJM2 = CC23*(CZJ/CZI)*10.0D0**HRSH
                     DELJ = (HJM(J)-HJM2)*HS2(J)
                     RATIO = (CZJ-DELJ)/CZJ
                     HJM(J)=HJM2
                     RR = HJM2/HJM(J)
                     WRITE(*,*)J,FX,RR,DELJ,RATIO
                     DO II = J+1,M
                        HJM(II) = HJM(II)*RATIO
                     END DO
                  END DO
               ENDIF
 13            CONTINUE
            ENDIF
         END DO
      ENDIF
C  CONVECTIVE OVERSHOOT APPLIED TO NORMAL CONVECTION ZONES.
      CALL OVROT(HCOMP,HDM,HPM,HRM,HS,HTM,LCM,M,LCZM,MRZONE,MXZONE,
     *                 NRZONE,NZONE)
C  REBURN THE ORIGINAL MIXTURE FOR THE SMALL DIFFUSION TIME STEP.
C MHP 6/00 - FOR THERMODYNAMIC CONSISTENCY USE CURRENT T, NOT END OF
C TIMESTEP T (REPLACED HT IN CALL WITH HTM)
      CALL ROTMIX(DT,HCOMP,HS2,HTM,5,M,MRZONE,MXZONE,
     *            NRZONE,NZONE
     *            ,HSTOT,HDM,HS,HRM,HPM,LCZM,HS1) 
      DO I = 1,M
         DO J = 1,IEND
            HCOMPS(J,I) = HCOMP(J,I)
         END DO
      END DO
C MHP 05/02 ADDED DEUTERIUM BURNING
      IF(HCOMPP(12,M).GT.1.0D-14)THEN
C INCREMENT THE TIMESTEP
         IF(LFIRST) THEN
            DO I = 1,M
               DRATEM(I) = DRATE0(I)+FAC2*(DRATE(I)-DRATE0(I))
               DRATEM0(I) = DRATE0(I)
            END DO
         ELSE
            DO I = 1,M
               DRATEM0(I) = DRATEM(I)
               DRATEM(I) = DRATEM(I)+FAC2*(DRATE(I)-DRATE0(I))
            END DO
         ENDIF
C RADIATIVE ZONES.
C
         DO K = 1,NRZONE
            DO J = MRZONE(K,1),MRZONE(K,2)
C EXIT LOOP ONCE T DROPS BELOW NUCLEAR REACTION T CUTOFF
               IF(HTM(J).LE.TCUT(1)) GOTO 190
               IBEGIN = J
               IEND = J
               CALL DBURNM(IBEGIN,IEND,M,HS2,HCOMP,DT,DRATEM,DRATEM0,
     *                     FAC2)
           END DO
        END DO
 190    CONTINUE
C
C CONVECTION ZONES.
C NOTE KEMCOM ALSO AUTOMATICALLY HOMOGENIZE CONVECTION ZONES.
C
         DO K = 1,NZONE
            IBEGIN = MXZONE(K,1)
            IEND = MXZONE(K,2)
            CALL DBURNM(IBEGIN,IEND,M,HS2,HCOMP,DT,DRATEM,DRATEM0,
     *                  FAC2)
         END DO
      ENDIF
C  DETERMINE EXTENT OF CENTRAL CONVECTION ZONE.
C  IMIN IS THE FIRST ZONE ABOVE A CENTRAL CONVECTION ZONE, AND THUS THE
C  FIRST ZONE CONSIDERED FOR STABILITY AGAINST ROTATIONAL INSTABILITIES.
      IF(LCZM(1))THEN
         DO 60 I = 2,M
            IF(.NOT.LCZM(I))GOTO 65
   60    CONTINUE
         I = M + 1
   65    IMIN = MAX(2,I-1)
      ELSE
         IMIN = 2
      ENDIF
C  DETERMINE EXTENT OF SURFACE CONVECTION ZONE.
      LALLCZ = .FALSE.
      IF(LCZM(M))THEN
C  SURFACE C.Z. EXISTS.  FIND LOWEST SHELL (IMAX), WHICH IS ALSO THE 
C  UPPERMOST ZONE CONSIDERED FOR STABILITY AGAINST ROTATIONALLY INDUCED MIXING.
         DO 70 I = M-1,1,-1
            IF(.NOT.LCZM(I)) GOTO 80
   70    CONTINUE
         LALLCZ = .TRUE.
         I = 0
   80    IMAX = I + 1
C  HSTOP IS THE MASS AT THE TOP OF THE C.Z.
C  HSBOT IS THE MASS AT THE BOTTOM OF THE C.Z.
         HSTOP = EXP(CLN*HSTOT)
         IF(IMAX.GT.1)THEN
            HSBOT = 0.5D0*(HS1(IMAX)+HS1(IMAX-1))
         ELSE
            HSBOT = 0.0D0
         ENDIF
C  LCZSUR=T IF A SURFACE C.Z.DEEP ENOUGH FOR ANGULAR MOMENTUM LOSS EXISTS
         IF((HSTOP-HSBOT)/CMSUN.GT.0.0D0)THEN
            LCZSUR = .TRUE.
         ELSE
            LCZSUR= .FALSE.
         ENDIF
      ELSE
C  NO SURFACE C.Z.
         IMAX = M
         LCZSUR = .FALSE.
      ENDIF
C MHP 3/09 ADD ABILITY TO COMPUTE THE CONVECTIVE OVERTURN TIMESCALE 'LOCALLY'.
C THIS IS DEFINED AS HP/V, WHERE HP IS THE PRESSURE SCALE HEIGHT AT THE BASE
C AND V IS THE CONVECTIVE VELOCITY ONE PRESSURE SCALE HEIGHT ABOVE THE BASE.
C FOR FULLY CONVECTIVE STARS THE CENTRAL PRESSURE SCALE HEIGHT DIVERGES, SO
C INSTEAD DEFINE V AT THE POINT WHERE HP = P/RHO*G = P*R^2/RHO*G*M = R.
C      IF(LCZSUR)THEN
C         IF(.NOT.LALLCZ)THEN
CC PINPOINT RCZ
C            DD2 = DELRM(IMAX-1)-DELAM(IMAX-1)
C            DD1 = DELRM(IMAX)-DELAM(IMAX)
C            FX = DD2/(DD2-DD1)
CC            WRITE(*,911)IMAX,FX,DD2,DD1
CC 911        FORMAT(I5,1P3E12.3)
CC INFER HP
C            ENVRL = HRM(IMAX-1)+FX*(HRM(IMAX)-HRM(IMAX-1))
C            ENVR = EXP(CLN*ENVRL)
C            PS2 = EXP(CLN*(HPM(IMAX)-HDM(IMAX)))/HGM(IMAX)
C            PS1 = EXP(CLN*(HPM(IMAX-1)-HDM(IMAX-1)))/HGM(IMAX-1)
C            PSCA = PS1 + FX*(PS2-PS1)
C            RTESTL = DLOG10(ENVR+PSCA)
CC FIND V
C            DO K = IMAX+1,M
C               IF(HRM(K).GT.RTESTL)THEN
C                  FX = (RTESTL-HRM(K-1))/(HRM(K)-HRM(K-1))
C                  CVEL = VELM(K-1)+FX*(VELM(K)-VELM(K-1))
C                  GOTO 85
C               ENDIF
C            END DO
C            CVEL = VELM(M)
C 85         CONTINUE
CC DEFINE TAUCZ
C            TAUCZ = PSCA/CVEL
CC            WRITE(*,911)K,PSCA,CVEL,TAUCZ
C         ELSE
CC INFER HP
C            PSCA2 = EXP(CLN*(HPM(1)-HDM(1)))/HGM(1)
C            RTEST2 = EXP(CLN*HR(1))
C            IF(PSCA2.LE.RTEST2)THEN
CC HP < R AT THE FIRST POINT.  ASSUME V CONSTANT INSIDE AND HP = K/R FOR
CC SLOWLY VARYING DENSITY AND PRESSURE NEAR THE CENTER.
C               CVEL = VELM(1)
C               PSCA = (PSCA2*RTEST2)**0.5D0
C               TAUCZ = PSCA/CVEL
CC               WRITE(*,912)PSCA2,RTEST2,PSCA,CVEL,TAUCZ
CC 912           FORMAT(1P5E12.3)
C            ELSE
C               DO K = 2,M
C                  PSCA1 = PSCA2
C                  RTEST1 = RTEST2
C                  PSCA2 = EXP(CLN*(HPM(K)-HDM(K)))/HGM(K)
C                  RTEST2 = EXP(CLN*HR(K))
CC FIND LOCATION WHERE HP = R
C                  IF(PSCA2.LE.RTEST2)THEN
C                     FX = (RTEST1-PSCA1)/((PSCA2-RTEST2)-(PSCA1-RTEST1))
CC FIND V
C                     CVEL = VELM(K-1)+FX*(VELM(K)-VELM(K-1))
C                     PSCA = PSCA1+FX*(PSCA2-PSCA1)
CC DEFINE TAUCZ
C                     TAUCZ = PSCA/CVEL
C                     GOTO 95
C                  ENDIF
C               END DO
C               K = M
C               CVEL = VELM(M)
C               PSCA = PSCA2
C               TAUCZ = PSCA/CVEL
C 95            CONTINUE
CC               WRITE(*,911)K,PSCA,CVEL,TAUCZ
C            ENDIF
C         ENDIF
C      ENDIF
      IF(.NOT.LSOLID)THEN
C  NOW FIND THE RUN OF ROTATION VARIABLES THAT ARE CONSISTENT WITH THE
C  INTERMEDIATE STRUCTURE AND THE RUN OF SPECIFIC ANGULAR MOMENTUM J/M.
C  J/M = I/M * OMEGA.
C  FIRST GUESS AT MOMENT OF INERTIA OF DISTORTED SPERICAL SHELLS:
C  I/M = 2/3 R**2.
         DO I = 1,M
            HIM(I) = CC23*EXP(CLN*2.0D0*HRM(I))
            OMEGAM(I) = HJM(I)/HIM(I)
            HIM(I) = HS2(I)*HIM(I)
         END DO
C  SOLVE FOR THE ANGULAR VELOCITIES OF THE SHELLS GIVEN THE SPECIFIC 
C  ANGULAR MOMENTUM (HJM) AND A FIRST GUESS AT THE ANGULAR VELOCITY(OMEGAM)
C  AND MOMENT OF INERTIA (HIM).
         CALL GETROT(HDM,HJM,HRM,HS,HS2,LCZM,M,ETA2M,HIM,OMEGAM,QIWM,R0M)
C  FIND TOTAL MOMENT OF INERTIA OF THE SURFACE C.Z. IF APPLICABLE.
         IF(LCZSUR)THEN
            HICZ = HIM(M)
            DO I = M-1,1,-1
               IF(.NOT.LCZM(I))GOTO 110
               HICZ = HICZ + HIM(I)
            END DO
  110       CONTINUE
         ENDIF
      ELSE
         JSTART = 1
         JEND = M
         CALL SOLID(HDM,HJM,HRM,HS,HS2,JSTART,JEND,ETA2M,HIM,OMEGAM,
     *                 QIWM,R0M,M)
         IF(LCZSUR)THEN
            HICZ = HIM(1)
            DO I = 2,M
               HICZ = HICZ + HIM(I)
            END DO
         ENDIF
      ENDIF
      RETURN
      END
