C $$$$$$
C 11/91 MHP REVISED SUBROUTINE (REPLACES OLD FINDW).
C GETW EVOLVES THE ANGULAR MOMENTUM DISTRIBUTION IN TIME.
C IT ENFORCES LOCAL CONSERVATION OF ANGULAR MOMENTUM IN RADIATIVE REGIONS,
C AND ENFORCES THE USER-SPECIFIED ROTATION LAW IN CONVECTIVE REGIONS.
C BOTH MERIDIONAL CIRCULATION AND DIFFERENTIAL ROTATION WITH DEPTH CAN
C CAUSE THE RADIAL TRANSPORT OF ANGULAR MOMENTUM AND MATERIAL.
C GETW SOLVES FOR THE TRANSPORT OF ANGULAR MOMENTUM AND THE ASSOCIATED MIXING
C IF DESIRED (LINSTB=T), AND ACCOUNTS FOR ANGULAR MOMENTUM LOSS CAUSED BY A 
C MAGNETIC STELLAR WIND IF DESIRED (LJDOT0=T).
C IF INSTABILITIES ARE BEING TREATED, THE BURNING OF THE LIGHT ELEMENTS
C LITHIUM AND BERYLLIUM ARE CONSIDERED HERE IF DESIRED (LEXCOM=T).
C FOR A DISCUSSION OF THE OVERALL TECHNIQUE USED SEE PINSONNEAULT, KAWALER,
C SOFIA, AND DEMARQUE (1989), AP.J. VOL. 338, P.424.
C 11/91 JENV0 ADDED TO CALL.
      SUBROUTINE GETW(BL,DELTS,DWMAX,FP,FT,HCOMP,HD,HJM,HL,HP,HR,HS,
     *             HS1,HS2,HSTOT,HT,LC,LJDOT,M,MODEL,SJTOT,SMASS,
     *                 TEFFL,ETA2,HG,HI,OMEGA,QIW,R0,JENV0)
      PARAMETER (JSON=5000)
      IMPLICIT REAL*8(A-H,O-Z)
      IMPLICIT LOGICAL*4(L)
      DIMENSION HD(JSON),HJM(JSON),HR(JSON),HS(JSON),HS2(JSON),LC(JSON),
     * ETA2(JSON),HI(JSON),OMEGA(JSON),R0(JSON),HCOMP(15,JSON),
     * HL(JSON),HP(JSON),HT(JSON),FP(JSON),FT(JSON),HG(JSON),LCZ(JSON),
     * QIW(JSON),HJMSAV(JSON),HS1(JSON),
     * ETA2M(JSON),HDM(JSON),HGM(JSON),HIM(JSON),HLM(JSON),HPM(JSON),
     * HRM(JSON),HTM(JSON),LCM(JSON),OMEGAM(JSON),QIWM(JSON),R0M(JSON),
     * LCZM(JSON)
C MHP 6/00 ADDED COD2, HV TO ALLOW BUR-ST MIXING PLUS BURNING.
      DIMENSION COD2(JSON),HV(JSON)
      DIMENSION MXZONE(12,2),MXZON0(12,2),MRZONE(13,2)
      COMMON/CONST/CLSUN,CLSUNL,CLNSUN,CMSUN,CMSUNL,CRSUN,CRSUNL,CMBOL
      COMMON/CONST1/ CLN,CLNI,C4PI,C4PIL,C4PI3L,CC13,CC23,CPI
      COMMON/CONST2/CGAS,CA3,CA3L,CSIG,CSIGL,CGL,CMKH,CMKHN
      COMMON/CONST3/CDELRL,CMIXZ,CMIXL2,CMIXL3,CLNDP,CSECYR
C 11/91 COMMON BLOCKS ADDED FOR PRESSURE SCALE HEIGHT CALC. FOR LIBURN
      COMMON/DPMIX/DPENV,ALPHAC,ALPHAE,ALPHAM,BETAC,IOV1,IOV2,
     *      IOVIM, LOVSTC, LOVSTE, LOVSTM, LSEMIC, LADOV, LOVMAX
      COMMON/LIOV/PSCAL0,PSCAL1
      COMMON/CT2/DTWIND
      COMMON/CTLIM/ATIME(14),TCUT(5),TSCUT,TENV0,TENV1,TENV,TGCUT
C MHP 8/17 ADDED EXCEN, C_2 TO COMMON BLOCK FOR MATT ET AL. 2012 CENT. TERM
      COMMON/CWIND/WMAX,EXMD,EXW,EXTAU,EXR,EXM,EXL,EXPR,CONSTFACTOR,
     *             STRUCTFACTOR,EXCEN,C_2,LJDOT0
C      COMMON/CWIND/WMAX,EXMD,EXW,EXTAU,EXR,EXM,CONSTFACTOR,STRUCTFACTOR,LJDOT0
      COMMON/DIFUS/DTDIF,DJOK,ITDIF1,ITDIF2
      COMMON/FLAG/LEXCOM
      COMMON/LUOUT/ILAST,IDEBUG,ITRACK,ISHORT,IMILNE,IMODPT,ISTOR,IOWR
      COMMON/MDPHY/AMUM(JSON),CPM(JSON),DELM(JSON),DELAM(JSON),
     *     DELRM(JSON),ESUMM(JSON),OM(JSON),QDTM(JSON),
     *     THDIFM(JSON),VELM(JSON),VISCM(JSON),EPSM(JSON)
      COMMON/OLDPHY/DELO(JSON),DELAO(JSON),AMUO(JSON),OO(JSON),
     *     CPO(JSON),QDTO(JSON),VELO(JSON),VISCO(JSON),
     *     THDIFO(JSON),ESUMO(JSON),DELRO(JSON),EPSO(JSON)
      COMMON/OLDMOD/HPO(JSON),HTO(JSON),HRO(JSON),HLO(JSON),HDO(JSON),
     *     HCOMPP(15,JSON),HSS(JSON),LCO(JSON),LCZO(JSON),TEFFLO,MO
      COMMON/OLDROT/WOLD(JSON),HJX(JSON),HIO(JSON),HGO(JSON),
     *     R0X(JSON),ETA2X(JSON)
      COMMON/ROT/WNEW,WALPCZ,ACFPFT,ITFP1,ITFP2,LROT,LINSTB,LWNEW
      COMMON/TEMP/CP(JSON),HAMU(JSON),SQDT(JSON),THDIF(JSON),
     *     VISC(JSON)
C 7/91 NEW LITHIUM BURNING COMMON BLOCKS ADDED.
      COMMON/NEWRAT/RLI6(JSON),RLI7(JSON),RBE9(JSON)
      COMMON/OLDRAT/RLI60(JSON),RLI70(JSON),RBE90(JSON)
      COMMON/OLDAB/HCOMPS(15,JSON)
C 8/92 COMMON BLOCK FOR COMPUTATION OF BEGINNING OF STEP MU
C BARRIER.
      COMMON/TEMP2/VES(JSON),VES0(JSON),VSS(JSON),VSS0(JSON),
     *     HLE(JSON),VGSF(JSON),VGSF0(JSON),VMU(JSON)
      COMMON/VMULT/FW,FC,FO,FES,FGSF,FMU,FSS,RCRIT
      COMMON/QUADRU/QUAD(JSON),GG(JSON)
      COMMON/ROTPRT/LPRT0
      COMMON/DISK/SAGE,TDISK,PDISK,LDISK
C MHP 3/99 ADDED FLAG TO TREAT THE ENTIRE STAR AS 'CONVECTIVE'
C FOR ANGULAR MOMENTUM PURPOSES.
      COMMON/SBROT/LSOLID
C MHP 06/02
C Time change of theta
      COMMON/OLDROT2/THO(JSON),THN(JSON),THM(JSON),
     *               DDELM(JSON),FESTIME(JSON),THP(JSON),
     *               QWRST(JSON),WMST(JSON),QWRMST(JSON)
      COMMON/OVRTRN/LNEWTCZ,LCALCENV,TAUCZ,TAUCZ0,PPHOT,PPHOT0,FRACSTEP
      SAVE
      LBURS = .FALSE.
C DETERMINE THE NUMBER OF DIFFERENT ELEMENTS AND ISOTOPES BEING TRACKED
C BY THE CODE (NSPEC).
      NSPEC = 11
      IF(LEXCOM) NSPEC = 15
C  CONVECTIVE AND RADIATIVE REGIONS ARE TREATED DIFFERENTLY FOR ANGULAR
C  MOMENTUM PURPOSES; IF CONVECTIVE OVERSHOOT IS BEING INCLUDED THE
C  OVERSHOOT REGION IS TREATED AS CONVECTIVE FOR ANGULAR MOMENTUM PURPOSES.
C  ***NOTE : IF LINSTB=T THERE MUST BE AT LEAST ONE SHELL IN THE OVERSHOOT
C  REGION, TO COUPLE THE RADIATIVE AND CONVECTIVE REGIONS AND TO AVOID
C  NUMERICAL PROBLEMS IN SOME OF THE TERMS WHICH ARISE IN THE SOLUTION OF
C  THE DIFFUSION EQUATIONS.
C
C  OVROT CALCULATES CONVECTIVE OVERSHOOT BY ARBITRARILY MIXING TO A 
C  USER-SPECIFIED FRACTION OF A PRESSURE SCALE HEIGHT ABOVE OR BELOW A 
C  CONVECTIVE REGION.  IT RETURNS A VECTOR LCZ, WHICH IS TRUE IF A SHELL IS
C  CONVECTIVE FOR ANGULAR MOMENTUM PURPOSES.
C 7/91 CHANGED CALL TO OVROT.
      CALL OVROT(HCOMP,HD,HP,HR,HS,HT,LC,M,LCZ,MRZONE,MXZONE,NRZONE,
     *           NZONE)
C MHP 9/94 ADDED DISK LOCKING OPTION.
      LOCK = .FALSE.
      IF(LDISK .AND. SAGE.LE.TDISK)LOCK = .TRUE.
      IF(.NOT.LINSTB)THEN
C  STORE THE SURFACE ANGULAR VELOCITY FROM THE BEGINNING OF THE TIMESTEP.
         OMEGAS = OMEGA(M)
C  ENFORCE SB ROTATION (OR UNIFORM ROTATION LAW IN ENTIRE STAR) IF DESIRED.
         IF(LSOLID)THEN
            DO I = 1,M
               LCZ(I) = .TRUE.
            END DO
         ENDIF
C  GETROT TAKES THE ANGULAR MOMENTUM DISTRIBUTION AND FINDS THE
C  ROTATION CURVE THAT CORRESPONDS TO IT.  CONVECTIVE REGIONS HAVE
C  SOLID BODY ROTATION ENFORCED ON THEM.
         CALL GETROT(HD,HJM,HR,HS,HS2,LCZ,M,ETA2,HI,OMEGA,QIW,R0)
C  ANGULAR MOMENTUM LOSS WITHOUT INTERNAL ANGULAR MOMENTUM TRANSPORT.
C         DO I = 1,M
C            WOLD(I) = OMEGA(I)
C         END DO
         IF(.NOT.LOCK .AND. LJDOT0 .AND. LC(M)) THEN
C  FIND MOMENT OF INERTIA OF THE SURFACE C.Z.
            HICZ = 0.0D0
C  ENFORCE SB ROTATION (OR UNIFORM ROTATION LAW IN ENTIRE STAR) IF DESIRED.
            IF(LSOLID)THEN
              IMAX = 1
            ELSE
              IMAX = MXZONE(NZONE,1)
            ENDIF
            DO I = IMAX,M
               HICZ = HICZ + HI(I)
            END DO
C  FIND LOWEST SHELL IN SURFACE CZ (IMAX)
C            IMAX = MXZONE(NZONE,1)
C  HSTOP IS THE MASS AT THE TOP OF THE C.Z.
C  HSBOT IS THE MASS AT THE BOTTOM OF THE C.Z.
            HSTOP = EXP(CLN*HSTOT)
            IF(IMAX.GT.1)THEN
               HSBOT = 0.5D0*(HS1(IMAX)+HS1(IMAX-1))
            ELSE
               HSBOT = 0.0D0
            ENDIF
            LJDOT = LJDOT0
C MHP 10/02 UNUSED LFIRST REMOVED FROM CALL
C MHP 10/17 timestep average loss rate
C            FRACSTEP = 1.
            FRACSTEP = 0.5
            CALL MWIND(BL,DELTS,HSBOT,HSTOP,IMAX,M,LJDOT,OMEGAS,
     *                SJTOT,SMASS,TEFFL,HICZ,HJM)
C     *                SJTOT,SMASS,TEFFL,HICZ,HJM,LFIRST)
C  FIND THE NEW RUN OF OMEGA IN THE CONVECTION ZONE AFTER THE WIND.
C MHP 10/02 REPLACED IEND WITH M IN CALL, DEFINED IEND=M
            IEND = M
            CALL WCZ(HD,HJM,HR,HS,HS2,IMAX,IEND,ETA2,HI,OMEGA,
     *               QIW,R0,M)
         ENDIF
         GOTO 9999
      ENDIF
C  GETROT TAKES THE ANGULAR MOMENTUM DISTRIBUTION AND FINDS THE
C  ROTATION CURVE THAT CORRESPONDS TO IT.  CONVECTIVE REGIONS HAVE
C  SOLID BODY ROTATION ENFORCED ON THEM.
      CALL GETROT(HD,HJM,HR,HS,HS2,LCZ,M,ETA2,HI,OMEGA,QIW,R0)
      LSKIP = .NOT.LINSTB .AND. .NOT.LJDOT
      IF(LSKIP.OR.DELTS.LE.0.0D0) GOTO 9999
C  NOW LIMIT THE DIFFUSION TIMESTEP TO A MAXIMUM CHANGE IN OMEGA
C  FROM THE PREVIOUS MODEL.
      IF(DWMAX.EQ.0.0D0) DWMAX = DTWIND
      NSTEP = INT(DWMAX/DTDIF)
      IF (MOD(DWMAX,DTDIF).NE.0.0D0) NSTEP = NSTEP + 1
      NSTEP2 = INT(DTWIND/DTDIF)
      IF (MOD(DTWIND,DTDIF).NE.0.0D0) NSTEP2 = NSTEP2 + 1
C     NSTEP = MAX(NSTEP,NSTEP2/2)
      NSTEP = MIN(NSTEP,NSTEP2)
      DT = DELTS/DFLOAT(NSTEP)
C  FIND BASIC PHYSICAL QUANTITIES NEEDED FOR BOTH SECULAR AND DYNAMICAL
C  INSTABILITES: ADIABATIC AND ACTUAL TEMPERATURE GRADIENTS,OPACITIES,
C  KINEMATIC VISCOSITIES,THERMOMETRIC DIFFUSIVITY, AND HEAT CAPACITY.
      CALL PHYSIC(FP,FT,HCOMP,HD,HG,HL,HP,HR,HS,HT,LC,LCZ,M,TEFFL)
C 8/17 DETERMINE TAUCZ AND PPHOT
      CALL GETTAU(HCOMP,HR,HP,HD,HG,HS1,HT,FP,FT,TEFFL,
     *            HSTOT,BL,M,LC,ENVR)
C IF DT IS LESS THAN DELTS, THEN THE MODEL TIMESTEP IS TOO LONG FOR THE
C DIFFUSION CALCULATIONS.  IF THIS OCCURS, 
C USE A SERIES OF SMALLER TIMESTEPS THAT DON'T VIOLATE THIS CONDITION.
C INTERPOLATE THE MODEL STRUCTURE BETWEEN THE OLD MODEL AND THE NEW ONE
C TO CALCULATE DIFFUSION AND WIND BETWEEN MODELS.
      SUMDT = 0.0D0
      LFIRST = .TRUE.
C      DO 20 I = 1,M
C         WOLD(I) = OMEGA(I)
C   20 CONTINUE
C  ENTRY FOR SERIES OF DIFFUSION TIMESTEPS.
   30 CONTINUE
      IREDO = 0
C  ENTRY FOR DIFFUSION TIMESTEP CUTTING.
   40 CONTINUE
C MHP 06/02 CHANGED TO ELIMINATE OCCASIONAL
C ALMOST ZERO TIMESTEP FROM ROUNDOFF ERROR
      TEST = DELTS - DELTS*1.0D-6
      IF(SUMDT+DT.GE.TEST)THEN 
         DT = DELTS - SUMDT
         SUMDT = DELTS
      ELSE
         SUMDT = SUMDT + DT
      ENDIF
C COPY OVER PRIOR THETA(TIME) TERM TO TEMPORARY SLOT
C FOR USE IN THE ADVECTION/DIFFUSION TREATMENT OF MAEDER&ZAHN 1998
      IF(LFIRST)THEN
         THP(1) = THO(1)
         WMST(1) = WOLD(1)
         DO I = 2,M
            QWRMST(I) = QWRST(I)
            THP(I) = THO(I)
            WMST(I) = WOLD(I)
         END DO
C RECOMPUTE THETA
      ELSE
         WMST(1) = OMEGA(1)
         DO I = 2,M
            WMID = 0.5D0*(OMEGA(I)+OMEGA(I-1))
            DR = 10.0D0**HRM(I)-10.0D0**HRM(I-1)
            QW = (OMEGA(I)-OMEGA(I-1))/DR
            THP(I) = THM(I)*WMID*QW
            QWRMST(I) = QW
            WMST(I) = OMEGA(I)
         END DO
      ENDIF
      FX = SUMDT/DELTS
      FRACSTEP = FX
C INTERPOLATE LINEARLY IN TIME FOR THE MODEL STRUCTURE BETWEEN THE
C START AND END OF THE TIMESTEP.
C JVS
      CALL MIDMOD(DELTS,DT,FX,HCOMP,HD,HG,HJM,HL,HP,HR,HS,HS1,HS2,
     *            HSTOT,HT,LC,LCZ,LFIRST,M,ETA2M,HDM,HGM,HICZ,HIM,
     *            HLM,HPM,HRM,HSBOT,HSTOP,HTM,IMIN,IMAX,LALLCZ,LCM,
     *            LCZM,LCZSUR,OMEGAM,R0M,QIWM,MRZONE,MXZONE,NRZONE,
     *            NZONE)
C IF DESIRED, REMOVE ANGULAR MOMENTUM FROM OUTER CONVECTION ZONE
C USING A WEBER-DAVIS MAGNETIC WIND MODEL
      IF(.NOT.LOCK .AND. LJDOT .AND. LCZSUR) THEN
         OMEGAS = OMEGAM(M)
C  WIND CALCULATION WITHOUT INSTABILITIES
         IF(LALLCZ.OR..NOT.LINSTB) THEN
C MHP 10/02 UNUSED LFIRST REMOVED FROM CALL
            CALL MWIND(BL,DT,HSBOT,HSTOP,IMAX,M,LJDOT,OMEGAS,
     *                SJTOT,SMASS,TEFFL,HICZ,HJM)
C     *                SJTOT,SMASS,TEFFL,HICZ,HJM,LFIRST)
C  FIND THE NEW OMEGA OF THE CONVECTION ZONE AFTER THE WIND.
C MHP 10/02 REPLACED IEND WITH M IN CALL, DEFINED IEND=M
            IEND = M
            CALL WCZ(HDM,HJM,HRM,HS,HS2,IMAX,IEND,ETA2M,HIM,OMEGAM,
     *               QIWM,R0M,M)
         ENDIF
      ENDIF
C  NOW CHECK FOR INSTABILITIES IN RADIATIVE REGIONS
      IF(LINSTB.AND..NOT.LALLCZ) THEN
C  ENSURE THAT CONVECTIVE REGIONS ARE FULLY MIXED.
C  JVS 0212       CALL MIXCZ(HCOMP,HS2,LCZM,M)
C G Somers 6/14, SET IMIX = .FALSE. SO THE CORRECT GRADS ARE USED.
            IMIX = .FALSE.
	    CALL MIXCZ(HCOMP,HS2,HS1,LCZM,HRM,HPM,HDM,HGM,M,IMIX)
C G Somers END	
C  NOW SOLVE FOR LONG-TIMESCALE(SECULAR) INSTABILITIES.
C  THESE ARE TREATED USING DIFFUSION EQUATIONS.
         DO 60 I = 1,M
            HJMSAV(I) = HJM(I)
   60    CONTINUE
C MHP 6/00 ADDED COD2,HV TO LIST RETURNED FROM SECULR
C FOR THE BUR-ST MIXING ROUTINES
         CALL SECULR(DELTS,DT,HDM,HGM,HIM,HLM,HPM,HRM,HS,HS1,HS2,
     *               HTM,HJMSAV,LCZM,LCM,M,MODEL,OMEGAM,
     *               HJM,ETA2M,QIWM,R0M,HCOMP,LFIRST,IMIN,IMAX,BL,
     *               HSTOT,SJTOT,SMASS,TEFFL,LREDO,IREDO,
     *               HICZ,HSBOT,HSTOP,OMEGAS,LCZSUR,
     *               MRZONE,MXZONE,NRZONE,NZONE,
     *               COD2,HV,LOK)
C  DIFFUSION TIMESTEP CUTTING REQUIRED IF LREDO IS TRUE.
C  RESET MEAN MOLECULAR WEIGHT,COMPOSITION,AND SPECIFIC ANGULAR MOMENTUM
C  TO THE VALUES THEY HAD PRIOR TO THE START OF THE STEP.
         IF(LREDO)THEN
            FX = 2.0D0*DT/DELTS
            SUMDT = SUMDT - 2.0D0*DT
            DO 80 I = 1,M
               HJM(I) = HJMSAV(I)
               AMUM(I) = AMUM(I) - FX*(HAMU(I)-AMUO(I))
               DO 70 J = 1,NSPEC
                  HCOMP(J,I) = HCOMPP(J,I)
   70          CONTINUE
   80       CONTINUE
            GOTO 40
         ENDIF
      ENDIF
C MHP 05/02 TAKEN OUT OF LOOP SO THAT NUCLEAR BURNING
C IS ACCOUNTED FOR IN MODELS THAT ARE FULLY CONVECTIVE
C OR WITHOUT INSTABILITIES
C ADDED CHANGE FOR BURLICH-STORER TREATMENT OF MIXING PLUS
C BURNING - ONLY UPDATED IF NOT USED
      IF(.NOT.LBURS)THEN
         DO I = 1,M
            DO J = 1,11
                  HCOMPP(J,I) = HCOMP(J,I)
            END DO
         END DO
      ENDIF
      LFIRST = .FALSE.
C  CLEAN UP EXTENDED COMP ARRAYS; ZERO VALUES THROUGHOUT MOST OF THE
C  INTERIOR CAN LEAD TO SMALL NEGATIVE VALUES DUE TO ROUNDOFF ERROR IN
C  THE DIFFUSION CALCULATIONS.
      IF(LEXCOM)THEN
C  PERFORM LIGHT ELEMENT BURNING.
C FIND SURFACE C.Z. DEPTH AT THE END OF THE TIME STEP.
         CALL CONVEC(HCOMP,HDM,HPM,HRM,HS,HTM,LCM,M,MRZONE,MXZONE,
     *                MXZON0,JCORE1,JENV1,NRZONE,NZONE,NZONE0)
C 11/91 CHANGED FOR LITHIUM BURNING WITH OVERSHOOT.
         IF(LOVSTE .AND. LCM(M))THEN
            PSCAL1 = ALPHAE*EXP(CLNDP*(HPM(JENV1)+2.0D0*HRM(JENV1)
     *               -HDM(JENV1)-CGL-HS(JENV1)))
         ELSE
            PSCAL1 = 0.0D0
         ENDIF
C FIND LIGHT ELEMENT BURNING RATES AT THE END OF THE TIME STEP.
         CALL LIRATE88(HCOMP,HDM,HTM,M,2)
C STORE CURRENT "END OF STEP" QUANTITIES AS "BEGINNING" ONES FOR
C THE NEXT STEP.
C ADDED CHANGE FOR BURLICH-STORER TREATMENT OF MIXING PLUS
C BURNING - ONLY UPDATED IF NOT USED
         IF(.NOT.LINSTB .OR. .NOT.LBURS .OR. LALLCZ)THEN
C COMPUTE BURNING.
            CALL LIBURN(DT,HCOMP,HDM,HRM,HS1,HS2,HTM,JENV1,JENV0,M)
            JENV0 = JENV1
            PSCAL0 = PSCAL1
            DO 155 I = 1,M
               RLI60(I) = RLI6(I)
               RLI70(I) = RLI7(I)
               RBE90(I) = RBE9(I)
  155       CONTINUE
         ELSE
C COMPUTE BURNING.
            CALL LIBURN2(DT,HCOMP,HDM,HRM,HS1,HS2,HTM,JENV1,JENV0,M)
         ENDIF
C  ENSURE THAT CONVECTIVE REGIONS ARE FULLY MIXED.
C  JVS 0212       CALL MIXCZ(HCOMP,HS2,LCZM,M)
C G Somers 6/14, SET IMIX = .FALSE. SO THE CORRECT GRADS ARE USED.
            IMIX = .FALSE.
	    CALL MIXCZ(HCOMP,HS2,HS1,LCZM,HRM,HPM,HDM,HGM,M,IMIX)
C G Somers END
C  ZERO OUT LOW ABUNDANCES.
         DO 100 I = 1,M
            DO 90 J = 12,15
               IF(HCOMP(J,I).LT.1.0D-24)HCOMP(J,I)=0.0D0
   90       CONTINUE
  100   CONTINUE
C MHP 6/00 ADDED OVERWRITE OF HCOMPP FOR LIGHT ELEMENTS
C ADDED CHANGE FOR BURLICH-STORER TREATMENT OF MIXING PLUS
C BURNING - ONLY UPDATED IF NOT USED
         IF(.NOT.LINSTB.OR.LALLCZ)THEN
            DO I = 1,M
               DO J = 12,15
                  HCOMPP(J,I) = HCOMP(J,I)
               END DO
            END DO
         ELSE IF(.NOT.LBURS)THEN
            DO I = 1,M
               DO J = 12,15
                  HCOMPP(J,I) = HCOMP(J,I)
               END DO
            END DO
         ENDIF
      ENDIF
C MHP 6/00 NOW ADDED THE OPTION OF PERFORMING A BUR-ST EXTRAPOLATION
C TO ZERO TIMESTEP FOR THE COMBINATION OF MIXING AND NUCLEAR BURNING.
      IF(LINSTB .AND. .NOT.LALLCZ)THEN
         IF(LBURS)THEN
        CALL BURSMIX(COD2,DT,HCOMP,HDM,HLM,HPM,HRM,HS,HS1,HS2,HSTOT,
     *                   HTM,HV,IMAX,IMIN,JENV0,JENV1,LOK,LCZM,M,MRZONE,
     *                   MXZONE,NRZONE,NZONE)
         ENDIF
      ENDIF
C  RETURN FOR NEXT SMALL DIFFUSION TIMESTEP IF NEEDED.
      IF(SUMDT.LT.DELTS)GOTO 30
C  UPDATE OMEGA ARRAY TO REFLECT NEW ANGULAR MOMENTUM DISTRIBUTION.
      DO 110 I = 1,M
         OMEGA(I) = OMEGAM(I)
  110 CONTINUE
C MHP 3/96 ADDED CALL TO RECOMPUTE SELF-CONSISTENT SET OF OMEGAS
      CALL GETROT(HD,HJM,HR,HS,HS2,LCZ,M,ETA2,HI,OMEGA,QIW,R0)
 9999 CONTINUE
      IF(LPRT0)THEN
         BL = LOG10(HL(M))
         RL = 0.5D0*(BL + CLSUNL - 4.0D0*TEFFL - C4PIL - CSIGL)
         FX = EXP(CLN*3.0D0*(HR(M)-RL))
         QSURF = FX*QUAD(M)
         PSURF = EXP(CLN*(CGL+HSTOT-RL))
         WRITE(*,9911)QSURF,PSURF,-1.5D0*QSURF/PSURF
 9911    FORMAT(1X,'QUAD ',1PE12.3,' PHIS ',E12.3,' 3/2 QUAD/G ',
     *          E12.3)
      ENDIF
      RETURN
      END
